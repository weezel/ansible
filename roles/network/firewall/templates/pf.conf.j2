LAN      = "{ vether0 em0 em1 }"
INTERNET = "em2"
VPN_DEV	 = "tun2"

TCPSTATE="modulate state"
UDPSTATE="keep state"

table <martians> {0.0.0.0/8 10.0.0.0/8 127.0.0.0/8 169.254.0.0/16 \
		  172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 192.168.0.0/24 \
		  192.168.222.0/26 224.0.0.0/3 198.18.0.0/15 \
		  198.51.100.0/24 203.0.113.0/24 239.255.255.250/26 224.0.0.0/24}
table <blacklist> persist file "/etc/blacklist.ips"
set limit states 100000
set skip on lo
set block-policy drop
set state-defaults pflow
set loginterface egress

antispoof log for { lo0, egress, vlan100 }
antispoof log for $LAN

#### Queue
queue lanq on vether0 flows 1024 bandwidth 980MB max 980MB qlimit 2048 default
queue internetq on $INTERNET flows 1024 bandwidth {{ pf.uplink_bw }} max {{ pf.uplink_bw }} qlimit 1024 default

#### Normalize and NAT
match in  all scrub (no-df random-id max-mss 1440)
match out all scrub (random-id)
# By default ALL local interfaces are being NATted
match out log on egress inet from !(egress:network) to any nat-to (egress:0)

#### Block cruft traffic
block log quick from <blacklist>
block quick inet6
block quick on egress proto igmp
block quick on $LAN proto igmp
block in quick inet proto udp from any to 255.255.255.255 port 10001
block in log quick on egress from <martians> to any
block return out log quick on egress from any to <martians>
block return out log proto {tcp udp} user _pbuild
block log all

#### LAN
# Everything allowed
pass log on $LAN inet

#### Internet IN
# Allow ping in
pass log on $INTERNET inet proto icmp all icmp-type 8 code 0

# Allow HTTP in
pass in log on egress inet proto tcp from any to ($INTERNET) \
	port {http https} \
	$TCPSTATE \
	(pflow, \
	 max-src-conn-rate 50/5, overload <blacklist> flush global)

# Internet -> SSH -> myserver
#pass in log on egress inet proto tcp from any to ($INTERNET) \
#        port 10022 rdr-to myserver.local.lan port ssh \
#        $TCPSTATE \
#        (pflow, \
#         max-src-conn-rate 3/10, \
#	 overload <blacklist> flush global)

#### Internet OUT
pass out log on egress inet $TCPSTATE (pflow)

#### Wireless-lab VLAN100
block       log on vlan100 all
block quick log on vlan100 inet from vlan100:network to vether0:network
pass  out   log on vlan100 inet from vether0:network to { 192.168.230.2 192.168.230.3 }
pass  in    log on vlan100 inet from vlan100:network to any


#pass in log on $INTERNET inet proto tcp from any to ($INTERNET) \
#        port 8888 rdr-to myserver.local.lan port 8888 \
#        $TCPSTATE \
#        (pflow)

#### XXX Wireguard
# VPN NAT
#pass out log on egress inet from ($VPN_DEV:network) nat-to (egress:0)
# VPN
#pass in log on $INTERNET inet proto { udp tcp } from any to ($INTERNET) \
#	port 51820 \
#	$UDPSTATE \
#	(pflow)

#### IKED VPN
#pass in log on $INTERNET proto udp from any to ($INTERNET) port {isakmp, ipsec-nat-t} tag IKED
#pass in log on $INTERNET proto esp from any to ($INTERNET) tag IKED
#pass    log on enc0 tagged ROADW keep state (if-bound)
#pass    log inet from 10.10.1.0/24 to 192.168.222.0/24 keep state (if-bound)
#pass    log inet from 192.168.222.0/24 to 10.10.1.0/24 keep state (if-bound)

