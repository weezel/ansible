server {
	listen	80;
	server_name {{site_name}} www.{{site_name}};

{% if ansible_system == "Linux" %}
	access_log /var/log/nginx/{{site_name}}_access.log main;
	error_log  /var/log/nginx/{{site_name}}_error.log;
{% elif ansible_system == "OpenBSD" %}
	access_log /var/www/logs/{{site_name}}_access.log main;
	error_log  /var/www/logs/{{site_name}}_error.log;
{% endif %}

	#root /var/www/htdocs/{{site_name}}

	location / {
		return 301 https://$server_name$request_uri;
	}

	# Deny access to dot files
	location ~ /\. {
		deny all;
	}

	# Allow Letsencrypt to check this directory
	location ^~ /.well-known/ {
		allow all;
	}
}

server {
	listen	443 default_server ssl;
	server_name {{site_name}} www.{{site_name}};

{% if ansible_system == "Linux" %}
	access_log /var/log/nginx/{{site_name}}-ssl_access.log main;
	error_log  /var/log/nginx/{{site_name}}-ssl_error.log;
{% elif ansible_system == "OpenBSD" %}
	access_log /var/www/logs/{{site_name}}-ssl_access.log main;
	error_log  /var/www/logs/{{site_name}}-ssl_error.log;
{% endif %}

	#root /var/www/htdocs/{{site_name}}

{% if nginx_cert_type == "letsencrypt" %}
	ssl_certificate     /etc/ssl/nginx/{{site_name}}/fullchain.pem;
	ssl_certificate_key /etc/ssl/nginx/{{site_name}}/privkey.pem;
{% elif nginx_cert_type == "self-signed" %}
	ssl_certificate     /etc/ssl/nginx/{{site_name}}.crt;
	ssl_certificate_key /etc/ssl/nginx/private/{{site_name}}.key;
{% endif %}

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_dhparam /etc/ssl/dhparam.pem;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_stapling on;
	ssl_stapling_verify on;
	add_header Strict-Transport-Security max-age=15768000;

	root /var/www/htdocs/{{site_name}};
	index index.php index.html index.htm;

	# Directives to send expires headers and turn off 404 error logging.
	location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
		access_log off; log_not_found off; expires max;
	}

	# Allow Letsencrypt to check this directory
	location ^~ /.well-known/ {
		allow all;
	}

	location / {
{% if nginx_uwsgi == true %}
	{% if nginx_reverse_proxy == true %}
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
	{% endif %}
		include uwsgi_params;
		uwsgi_pass unix:/var/www/{{site_name}}.sock;
{% else %}
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ /index.html;
		try_files $uri $uri/ /index.php?args;
{% endif %}
	}

	location /static {
		autoindex off;
		#alias /var/www/html/blaa;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		expires max;
		log_not_found off;
	}

	location ~* /(?:uploads|files)/.*\.php$ {
		deny all;
	}

	#error_page 404 /404.html;
	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/www;
	#}

	location ~ \.php$ {
{% if nginx_reverse_proxy == true %}
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
{% endif %}
		#include fastcgi.conf;
		fastcgi_intercept_errors on;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
		fastcgi_split_path_info ^(.+?\.php)(/.*)$;
		if (!-f $document_root$fastcgi_script_name) {
			return 404;
		}

{% if ansible_system == "Linux" %}
		fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
{% elif ansible_system == "OpenBSD" %}
		fastcgi_pass unix:/var/www/run/php-fpm.sock;
{% endif %}
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param HTTP_PROXY "";
		fastcgi_index index.php;
		include fastcgi_params;
	}
}

